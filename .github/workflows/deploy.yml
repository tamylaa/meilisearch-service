name: Deploy Meilisearch Service

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript build
        run: npm run build

      - name: Run CI safety scan (no D1 writes)
        run: node ./scripts/ci-scan-no-d1-writes.js

      - name: Run tests (if available)
        run: npm test --if-present

  deploy-staging:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: test
    runs-on: ubuntu-latest
    name: Deploy to Staging
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to Cloudflare Workers (Staging)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env staging
          secrets: |
            MEILI_MASTER_KEY
            MEILI_SEARCH_KEY
            AUTH_JWT_SECRET
        env:
          MEILI_MASTER_KEY: ${{ secrets.MEILI_MASTER_KEY }}
          MEILI_SEARCH_KEY: ${{ secrets.MEILI_SEARCH_KEY }}
          AUTH_JWT_SECRET: ${{ secrets.AUTH_JWT_SECRET }}

  deploy-production:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: [test, deploy-staging]
    runs-on: ubuntu-latest
    name: Deploy to Production
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to Cloudflare Workers (Production)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env production
          secrets: |
            MEILI_MASTER_KEY
            MEILI_SEARCH_KEY
            AUTH_JWT_SECRET
        env:
          MEILI_MASTER_KEY: ${{ secrets.MEILI_MASTER_KEY }}
          MEILI_SEARCH_KEY: ${{ secrets.MEILI_SEARCH_KEY }}
          AUTH_JWT_SECRET: ${{ secrets.AUTH_JWT_SECRET }}
